/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Presentacion;

import Interfaces.IControlador;
import DataTypes.DataProponente;
import DataTypes.DataPropuesta;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

public class InterConsultaPerfilProponente extends javax.swing.JInternalFrame {
    private final IControlador ic;
    private List<String> listaProponentes; //Solo tiene los NickNames de los Proponentes para llenar el comboBox
    private DataProponente miProponente; //Guarda el proponente(DataProponente) del que se estan mostrando los datos en el momento
    private DefaultTableModel modeloTablaPropuestas;
    private DefaultTableModel modeloTablaColaboradores;
    /**
     * Creates new form InterConsultaPerfilProponente
     */
    public InterConsultaPerfilProponente(IControlador ic) {
        this.setTitle("Consulta Perfil Proponente");
        this.ic = ic;
        listaProponentes = ic.getUsuariosProponentes();
        initComponents();
        for(String s : listaProponentes){
            PropoCombo.addItem(s);
        }
        //Separe estas dos en funciones asi no queda tan cargado
        inicializarTablas();
        configurarListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PropoCombo = new javax.swing.JComboBox<>();
        imagenPerfil = new javax.swing.JLabel();
        labelNickname = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelApellido = new javax.swing.JLabel();
        labelEmail = new javax.swing.JLabel();
        labelFecNac = new javax.swing.JLabel();
        labelDireccion = new javax.swing.JLabel();
        labelSitioWeb = new javax.swing.JLabel();
        labelBiografia = new javax.swing.JLabel();
        jScrollPaneBio = new javax.swing.JScrollPane();
        textoBiografia = new javax.swing.JTextArea();
        textoSitioWeb = new javax.swing.JTextField();
        textoDirecc = new javax.swing.JTextField();
        textoFechaNac = new javax.swing.JTextField();
        textoEmail = new javax.swing.JTextField();
        textoApellido = new javax.swing.JTextField();
        textoNombre = new javax.swing.JTextField();
        textoNickname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPropuestasDe = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaDeColaboradoresPropu = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setPreferredSize(new java.awt.Dimension(700, 500));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(700, 500));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Seleccione el Usuario Proponente a consultar:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        PropoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--" }));
        PropoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropoComboActionPerformed(evt);
            }
        });
        jPanel1.add(PropoCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 36, 250, -1));

        imagenPerfil.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(imagenPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 82, 200, 200));

        labelNickname.setText("Nickname");
        jPanel1.add(labelNickname, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 87, -1, -1));

        labelNombre.setText("Nombre");
        jPanel1.add(labelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 121, -1, -1));

        labelApellido.setText("Apellido");
        jPanel1.add(labelApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 155, -1, -1));

        labelEmail.setText("E-mail");
        jPanel1.add(labelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 189, -1, -1));

        labelFecNac.setText("Fecha Nacimiento");
        jPanel1.add(labelFecNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 223, -1, -1));

        labelDireccion.setText("Direccion");
        jPanel1.add(labelDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 257, -1, -1));

        labelSitioWeb.setText("Sitio Web");
        jPanel1.add(labelSitioWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 291, -1, -1));

        labelBiografia.setText("Biografia");
        jPanel1.add(labelBiografia, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 320, -1, -1));

        textoBiografia.setEditable(false);
        textoBiografia.setColumns(20);
        textoBiografia.setRows(5);
        textoBiografia.setEnabled(false);
        jScrollPaneBio.setViewportView(textoBiografia);

        jPanel1.add(jScrollPaneBio, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 320, 300, 65));

        textoSitioWeb.setEditable(false);
        textoSitioWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoSitioWebActionPerformed(evt);
            }
        });
        jPanel1.add(textoSitioWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 286, 300, -1));

        textoDirecc.setEditable(false);
        textoDirecc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoDireccActionPerformed(evt);
            }
        });
        jPanel1.add(textoDirecc, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 252, 300, -1));

        textoFechaNac.setEditable(false);
        textoFechaNac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoFechaNacActionPerformed(evt);
            }
        });
        jPanel1.add(textoFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 218, 300, -1));

        textoEmail.setEditable(false);
        textoEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoEmailActionPerformed(evt);
            }
        });
        jPanel1.add(textoEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 184, 300, -1));

        textoApellido.setEditable(false);
        textoApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoApellidoActionPerformed(evt);
            }
        });
        jPanel1.add(textoApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 150, 300, -1));

        textoNombre.setEditable(false);
        textoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoNombreActionPerformed(evt);
            }
        });
        jPanel1.add(textoNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 116, 300, -1));

        textoNickname.setEditable(false);
        textoNickname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoNicknameActionPerformed(evt);
            }
        });
        jPanel1.add(textoNickname, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 82, 300, -1));

        jLabel2.setText("Lista de Propuestas:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 375, -1, -1));

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(0.6);

        tablaPropuestasDe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo Propuesta", "Lugar", "Dinero Recaudado", "Estado Actual"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaPropuestasDe);
        if (tablaPropuestasDe.getColumnModel().getColumnCount() > 0) {
            tablaPropuestasDe.getColumnModel().getColumn(0).setResizable(false);
            tablaPropuestasDe.getColumnModel().getColumn(1).setResizable(false);
            tablaPropuestasDe.getColumnModel().getColumn(2).setResizable(false);
            tablaPropuestasDe.getColumnModel().getColumn(3).setResizable(false);
        }

        jSplitPane1.setLeftComponent(jScrollPane2);

        jLabel3.setText("Seleccione una Propuesta para mostrar Colaboradores");

        tablaDeColaboradoresPropu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NickName Colaborador", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaDeColaboradoresPropu);
        if (tablaDeColaboradoresPropu.getColumnModel().getColumnCount() > 0) {
            tablaDeColaboradoresPropu.getColumnModel().getColumn(0).setResizable(false);
            tablaDeColaboradoresPropu.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        jPanel1.add(jSplitPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 411, -1, 500));

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void inicializarTablas(){
        String[] encabezados = {"Titulo Propuesta", "Lugar" , "Dinero Recaudado", "Estado Actual"};    
    
        modeloTablaPropuestas = new DefaultTableModel(encabezados,0){
            @Override
            public boolean isCellEditable(int row,int column){
                return false; //Evito que las celdas se puedan editar
            }
        };
        tablaPropuestasDe.setModel(modeloTablaPropuestas);
        //Ya que el usuario selecciona una fila de una propuesta para mostrar colaboradores evito que seleccione las celdas
        tablaPropuestasDe.setRowSelectionAllowed(true);
        tablaPropuestasDe.setColumnSelectionAllowed(false);
        tablaPropuestasDe.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        String[] encabezadosTablaCola = {"Nickname Colaborador","Monto Aportado"};
        
        modeloTablaColaboradores = new DefaultTableModel(encabezadosTablaCola,0){
            @Override
            public boolean isCellEditable(int row,int column){
                return false; //Evito que las celdas se puedan editar
            }
        };
        tablaDeColaboradoresPropu.setModel(modeloTablaColaboradores);
        
    }
    private void configurarListeners(){
        //La tabla de Colaboradores se llena cuando se selecciona una fila en la tabla de Propuestas
        tablaPropuestasDe.getSelectionModel().addListSelectionListener(e -> {
            if(!e.getValueIsAdjusting()){
                int filaSeleccionada = tablaPropuestasDe.getSelectedRow();
                if(filaSeleccionada != -1){ 
                    //Obtengo el Titulo de la Propuesta Seleccionada
                    String Titulo = (String) tablaPropuestasDe.getValueAt(filaSeleccionada,0); 
                    llenarColaboradores(Titulo);   
                }
            }
        });
    }
    private void llenarColaboradores(String Titulo){
        //Vacio la tabla de Colaboradores
        modeloTablaColaboradores.setRowCount(0);

        List<String> listaAportes = ic.getColabsProp(Titulo);
        for (String aporte : listaAportes){
            String[] partes = aporte.split("\t"); 
            modeloTablaColaboradores.addRow(new Object[]{partes[0], partes[1]});
        }
    }
    private void textoNicknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoNicknameActionPerformed
        // TODO add your handling code here:

        //System.out.println(nickname);
    }//GEN-LAST:event_textoNicknameActionPerformed

    private void textoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoNombreActionPerformed

    private void textoApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoApellidoActionPerformed

    private void textoEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoEmailActionPerformed

    private void textoFechaNacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoFechaNacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoFechaNacActionPerformed

    private void textoDireccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoDireccActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoDireccActionPerformed

    private void textoSitioWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoSitioWebActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoSitioWebActionPerformed

    private void PropoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropoComboActionPerformed
        int selectedItem = PropoCombo.getSelectedIndex();
        if(selectedItem != 0){ //Si entra a este if se selecciono un Usuario Proponente por lo que tengo que mostrar los datos supongo que hare una funcion por fuera
            //asi evito llenar de tanta cosa el actionPerformed
            this.miProponente = ic.consultaDeProponente((String)PropoCombo.getSelectedItem()); //Le pido al controlador que me devuelva el DataProponente del seleccionado
            //System.out.println("1Direc: " + miProponente.getDireccion() + "2SitioWeb: " + miProponente.getSitioWeb() + "3Bio: " + miProponente.getBiografia());
            limpiarFormulario();
            llenarFormulario();
        }else{ //en el caso del else debo limpiar los datos mostrados
            limpiarFormulario();
        }
    }//GEN-LAST:event_PropoComboActionPerformed
    private void llenarFormulario(){ //Esta sera la funcion principal de este internalFrame donde lleno el formulario con las cosas ingresadas
        textoNickname.setText(miProponente.getNickname());
        textoNombre.setText(miProponente.getNombre());
        textoApellido.setText(miProponente.getApellido());
        textoEmail.setText(miProponente.getEmail());
        textoFechaNac.setText(miProponente.getFecNac().toString()); 
        
        
        ImageIcon icon = new ImageIcon(miProponente.getImagen());
        Image imagenEscalada = icon.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
        imagenPerfil.setIcon(new ImageIcon(imagenEscalada));
       
        
        //Aprovecho a dejarme algunas cosas separadas asi reciclo codigo para el Consulta Perfil Colaborador
        textoDirecc.setText(miProponente.getDireccion());
        textoSitioWeb.setText(miProponente.getSitioWeb());
        textoBiografia.setText(miProponente.getBiografia());
        
        llenarTablaPropuestas(); //Lo separo en otra funcion por las dudas
    }
    private void llenarTablaPropuestas(){
        modeloTablaPropuestas.setRowCount(0); //La vacio por el caso que pase de un colaborador a otro sin vaciarse al pasar por "-Seleccionar-"
        List<DataPropuesta> listaProp = new ArrayList<>(miProponente.getPropuestas());
        if(listaProp != null && !listaProp.isEmpty()){
        listaProp.sort(Comparator.comparing((DataPropuesta p)-> p.getEstadoActual().getEstado()));
        //Con esta linea de arriba ordeno la lista de Propuestas segun el orden en que esta definido el enumEstado
        Object[] fila;
        for (DataPropuesta dataProp : listaProp){
            fila = new Object[4];
            fila[0] = dataProp.getTitulo(); 
            fila[1] = dataProp.getLugar();
            fila[2] = dataProp.getAlcanzada();
            fila[3] = dataProp.getEstadoActual().getEstado();
            modeloTablaPropuestas.addRow(fila);
        }
     } //Tal vez podria agregar un else mostrando que no tiene propuestas ingresadas este proponente
    }
    private void limpiarFormulario(){ //Vacio el formualario cuando se selecciona el indice 0
        textoNickname.setText("");
        textoNombre.setText("");
        textoApellido.setText("");
        textoEmail.setText("");
        textoFechaNac.setText("");
        imagenPerfil.setIcon(null);
        //Aprovecho a dejarme algunas cosas separadas asi reciclo codigo para el Consulta Perfil Colaborador
        textoDirecc.setText("");
        textoSitioWeb.setText("");
        textoBiografia.setText("");
        modeloTablaPropuestas.setRowCount(0);
        modeloTablaColaboradores.setRowCount(0); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> PropoCombo;
    private javax.swing.JLabel imagenPerfil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneBio;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel labelApellido;
    private javax.swing.JLabel labelBiografia;
    private javax.swing.JLabel labelDireccion;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelFecNac;
    private javax.swing.JLabel labelNickname;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelSitioWeb;
    private javax.swing.JTable tablaDeColaboradoresPropu;
    private javax.swing.JTable tablaPropuestasDe;
    private javax.swing.JTextField textoApellido;
    private javax.swing.JTextArea textoBiografia;
    private javax.swing.JTextField textoDirecc;
    private javax.swing.JTextField textoEmail;
    private javax.swing.JTextField textoFechaNac;
    private javax.swing.JTextField textoNickname;
    private javax.swing.JTextField textoNombre;
    private javax.swing.JTextField textoSitioWeb;
    // End of variables declaration//GEN-END:variables
}
