/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Presentacion;

import DataTypes.EnumRetorno;
import Interfaces.IControlador;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerDateModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author nahud
 */
public class InterAltaPropuesta extends javax.swing.JInternalFrame {
    
    private final IControlador ic;
    List<String> listaProponentes;
    /**
     * Creates new form menuAltaPropuesta
     */
    public InterAltaPropuesta(IControlador ic) {
        initComponents();
        this.ic = ic;
        
        LocalDate fechaMin = LocalDate.now();
        Date minDate = Date.from(fechaMin.atStartOfDay(ZoneId.systemDefault()).toInstant());

        LocalDate fechaMax = LocalDate.of(2099, 1, 1);
        Date maxDate = Date.from(fechaMax.atStartOfDay(ZoneId.systemDefault()).toInstant());

        LocalDate fechaInicial = LocalDate.now();//.plusDays(1); //EL PLUS DAY ANDA PERO NO SE MUESTRA
        Date initialDate = Date.from(fechaInicial.atStartOfDay(ZoneId.systemDefault()).toInstant());

        SpinnerDateModel model = new SpinnerDateModel(initialDate, minDate, maxDate, Calendar.DAY_OF_MONTH);
        spinnerFec.setModel(model);
        
        listaProponentes = ic.getUsuariosProponentes();
        
        for(String s : listaProponentes){
            comboNick.addItem(s);
        }
        
        this.setTitle("Alta Propuesta");
        
        DefaultTreeModel modeloArbol = new DefaultTreeModel(UtilArbol.construirArbolConPropuestas(ic.cargarNodoRaizCategorias()));
        
        this.ArbolDeCategorias.setModel(modeloArbol);
        this.ArbolDeCategorias.expandRow(0);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTitulo = new javax.swing.JTextField();
        txtLugar = new javax.swing.JTextField();
        txtEntrada = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        btnAceptar = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        labelNick = new javax.swing.JLabel();
        listaRetorno = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        btnFoto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ArbolDeCategorias = new javax.swing.JTree();
        comboNick = new javax.swing.JComboBox<>();
        spinnerFec = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        txtTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloActionPerformed(evt);
            }
        });

        jLabel1.setText("Titulo:");

        jLabel2.setText("Lugar de realizacion:");

        jLabel3.setText("Descripcion:");

        jLabel4.setText("Fecha prevista:");

        jLabel5.setText("Monto x entrada:");

        jLabel6.setText("Monto necesario:");

        jLabel7.setText("Imagen (opcional):");

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        jLabel10.setText("Tipo:");

        txtTipo.setEditable(false);
        txtTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoActionPerformed(evt);
            }
        });

        labelNick.setText("Proponente:");

        listaRetorno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ENTRADAS GRATIS", "%VENTAS", "AMBOS" }));

        jLabel8.setText("Tipo de retorno:");

        btnFoto.setText("Elegir Foto");
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });

        ArbolDeCategorias.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                ArbolDeCategoriasValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ArbolDeCategorias);

        comboNick.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--" }));
        comboNick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNickActionPerformed(evt);
            }
        });

        spinnerFec.setModel(new javax.swing.SpinnerDateModel());
        spinnerFec.setEditor(new javax.swing.JSpinner.DateEditor(spinnerFec, "d/M/yyyy"));

        jLabel9.setText("Clickea en la categoria para a√±adirla");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listaRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFoto)
                    .addComponent(txtMonto, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(txtEntrada)
                    .addComponent(txtLugar)
                    .addComponent(spinnerFec))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cancelar)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel10)
                    .addComponent(labelNick, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(txtTipo)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(comboNick, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNick)
                            .addComponent(comboNick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtLugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spinnerFec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(btnFoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listaRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(Cancelar))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formComponentHidden

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formComponentShown

    private void txtTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:        
        String nick,titulo, descripcion, entrada, lugar, monto, tipo, tipoRet;
        LocalDate fechaActual = LocalDate.now();
        int op = comboNick.getSelectedIndex();
        nick = comboNick.getItemAt(op);
        titulo = txtTitulo.getText().trim();
        descripcion = txtDescripcion.getText().trim();
        entrada = txtEntrada.getText();
        Date fecha = (Date) spinnerFec.getValue();
        LocalDate fechaPrev = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
//        if (fechaPrev.equals(LocalDate.now())) {
//            fechaPrev = LocalDate.now().plusDays(1);
//        } Esto es para controlar que si ponen la fecha prevista como la fecha actual te sume un dia
//          no encuentro donde dice la letra que esto es nescesario pero creo recordar que lo era, por las dudas aca esta
        lugar = txtLugar.getText().trim();
        monto = txtMonto.getText().trim();
        tipo = txtTipo.getText().trim();
        
        EnumRetorno retorno = null;
        int seleccionado = listaRetorno.getSelectedIndex();
        tipoRet = listaRetorno.getItemAt(seleccionado);
        if (tipoRet.equals("ENTRADAS GRATIS")) {
            retorno = EnumRetorno.valueOf("ENTRADAS_GRATIS");
        }
        if (tipoRet.equals("%VENTAS")) {
            retorno = EnumRetorno.valueOf("PORCENTAJE_VENTAS");
        }
        if (tipoRet.equals("AMBOS")) {
            retorno = EnumRetorno.valueOf("AMBOS");
        }
        
        if (ic.existeTitulo(titulo)) {
            JOptionPane.showMessageDialog(this, "Ya existe ese titulo en el sistema!", "Error", HEIGHT);
            return;
        }
        
        if (nick.equals("--Seleccionar--") || txtTitulo.getText().isEmpty() || txtDescripcion.getText().isEmpty() || txtEntrada.getText().isEmpty() || txtLugar.getText().isEmpty() || txtMonto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Faltan campos por llenar!", "Error", HEIGHT);
        }else{
            
            try {
                Double.valueOf(txtEntrada.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "El Monto X Entrada tiene que ser un numero!", "Error", HEIGHT);
                return;
            }
            
            try {
                Double.valueOf(txtMonto.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "El Monto Necesario tiene que ser un numero!", "Error", HEIGHT);
                return;
            }
            
            if (Double.valueOf(txtEntrada.getText()) <= 0) {
                JOptionPane.showMessageDialog(this, "Monto X Entrada no puede ser menor a 0!", "Error", HEIGHT);
                return;
            }
            
            if (Double.valueOf(txtMonto.getText()) <= 0) {
                JOptionPane.showMessageDialog(this, "Monto Necesario no puede ser menor a 0!", "Error", HEIGHT);
                return;
            }
            
            if (this.txtImagen == null || this.txtImagen.isEmpty()) {
                this.txtImagen = "";
            }
           
            if(ic.altaPropuesta(nick, tipo, titulo, descripcion, lugar, fechaPrev, entrada, monto, retorno, fechaActual, this.txtImagen) == 1){
                JOptionPane.showMessageDialog(this, "La propuesta ha sido ingresada!", "Listo!", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }else if(ic.altaPropuesta(nick, tipo, titulo, descripcion, lugar, fechaPrev, entrada, monto, retorno, fechaActual, this.txtImagen) == 0){
                //ERROR CON LA CATEGORIA!
                JOptionPane.showMessageDialog(this, "NO SE ENCONTRO LA CATEGORIA", "Error", HEIGHT);
            }else{
                JOptionPane.showMessageDialog(this, "No se permite usar \"Categoria\" como tipo de espectaculo!", "Error", HEIGHT);
            }
            //quiere decir que quiere insertar imagen
            //cerrar la ventana
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_CancelarActionPerformed

    private void txtTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoActionPerformed

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Buscar imagen");
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Im√°genes JPG & PNG", "jpg", "png");
        fc.setFileFilter(filtro);
        
        File carpetaDestino = new File("fotos");
        if (!carpetaDestino.exists()) {
            carpetaDestino.mkdirs();
        }
        
        if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File foto = new File(fc.getSelectedFile().toString());
            File destino = new File(carpetaDestino, foto.getName());
            try {
                Files.copy(foto.toPath(), destino.toPath(), StandardCopyOption.REPLACE_EXISTING);
                JOptionPane.showMessageDialog(this, "Imagen ingresada con exito!", "Listo!", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(InterAltaPropuesta.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.txtImagen = destino.getAbsolutePath();
        }
    }//GEN-LAST:event_btnFotoActionPerformed

    private void ArbolDeCategoriasValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_ArbolDeCategoriasValueChanged
        // TODO add your handling code here:
        DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) ArbolDeCategorias.getLastSelectedPathComponent();
        if (ArbolDeCategorias.getLastSelectedPathComponent() == null) {
            return;
        }
         if (nodoSeleccionado.getUserObject().toString().equals("Categoria")) {
            JOptionPane.showMessageDialog(this, "No se permite usar \"Categoria\" como tipo de espectaculo!", "Error", HEIGHT);
            return;
        }
        if (!ic.seleccionaCategoria(nodoSeleccionado.getUserObject().toString())) {
            JOptionPane.showMessageDialog(this, "No se permite seleccionar una propuesta como tipo de espectaculo!", "Error", HEIGHT);
            return;   
        }
        if (!nodoSeleccionado.getUserObject().toString().equals("Categoria")) {
            txtTipo.setText(nodoSeleccionado.getUserObject().toString());
        }
    }//GEN-LAST:event_ArbolDeCategoriasValueChanged

    private void comboNickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNickActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboNickActionPerformed

    //private boolean open;
    private String txtImagen;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree ArbolDeCategorias;
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnFoto;
    private javax.swing.JComboBox<String> comboNick;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelNick;
    private javax.swing.JComboBox<String> listaRetorno;
    private javax.swing.JSpinner spinnerFec;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtEntrada;
    private javax.swing.JTextField txtLugar;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtTipo;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
